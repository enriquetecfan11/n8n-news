---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../FormattedDate.astro';

export interface Props {
  posts: CollectionEntry<'blog'>[];
  maxPosts?: number;
  title?: string;
  showMetadata?: boolean;
}

const { 
  posts, 
  maxPosts = 5, 
  title = "Noticias Relacionadas",
  showMetadata = true 
} = Astro.props;

const displayPosts = posts.slice(0, maxPosts);

// Funciones de utilidad
function getSentimentIcon(sentiment: string) {
  switch (sentiment) {
    case 'positivo': return 'üìà';
    case 'negativo': return 'üìâ';
    case 'neutral': return '‚û°Ô∏è';
    default: return 'üìä';
  }
}

function getImpactColor(impact: string) {
  switch (impact) {
    case 'alto': return '#dc3545';
    case 'medio': return '#ffc107';
    case 'bajo': return '#28a745';
    default: return '#6c757d';
  }
}

function getSectorIcon(sector: string) {
  const icons: Record<string, string> = {
    'tecnolog√≠a': 'üíª',
    'finanzas': 'üí∞',
    'energ√≠a': '‚ö°',
    'salud': 'üè•',
    'consumo': 'üõí',
    'pol√≠tica': 'üèõÔ∏è',
    'econom√≠a': 'üìä',
    'automotriz': 'üöó',
    'comercio': 'üåç'
  };
  return icons[sector] || 'üìã';
}
---

{displayPosts.length > 0 && (
  <div class="related-news">
    <h3 class="related-news-title">
      üîó {title}
    </h3>
    
    <div class="related-posts-grid">
      {displayPosts.map((post) => (
        <article class="related-post-card">
          <a href={`/blog/${post.id}/`} class="related-post-link">
            <div class="post-header">
              {showMetadata && post.data.impact && (
                <span 
                  class="impact-badge" 
                  style={`background-color: ${getImpactColor(post.data.impact)};`}
                >
                  {post.data.impact.toUpperCase()}
                </span>
              )}
              
              {showMetadata && post.data.sentiment && (
                <span class="sentiment-indicator">
                  {getSentimentIcon(post.data.sentiment)}
                </span>
              )}
            </div>

            <h4 class="post-title">{post.data.title}</h4>
            
            {showMetadata && (
              <div class="post-metadata">
                <div class="metadata-row">
                  <span class="date">
                    üìÖ <FormattedDate date={post.data.pubDate} />
                  </span>
                  {post.data.source && (
                    <span class="source">üì∞ {post.data.source}</span>
                  )}
                </div>
                
                {post.data.sectors && post.data.sectors.length > 0 && (
                  <div class="sectors-row">
                    {post.data.sectors.slice(0, 2).map(sector => (
                      <span class="sector-tag">
                        {getSectorIcon(sector)} {sector}
                      </span>
                    ))}
                    {post.data.sectors.length > 2 && (
                      <span class="more-sectors">
                        +{post.data.sectors.length - 2} m√°s
                      </span>
                    )}
                  </div>
                )}
                
                {post.data.tickers && post.data.tickers.length > 0 && (
                  <div class="tickers-row">
                    <span class="tickers-label">Acciones:</span>
                    <div class="tickers-list">
                      {post.data.tickers.slice(0, 3).map(ticker => (
                        <span class="ticker-badge">{ticker}</span>
                      ))}
                      {post.data.tickers.length > 3 && (
                        <span class="more-tickers">+{post.data.tickers.length - 3}</span>
                      )}
                    </div>
                  </div>
                )}
              </div>
            )}
            
            <div class="post-footer">
              <span class="read-more">Leer m√°s ‚Üí</span>
            </div>
          </a>
        </article>
      ))}
    </div>
  </div>
)}

<style>
  .related-news {
    margin: 2rem 0;
  }

  .related-news-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    color: #333;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .related-posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .related-post-card {
    background: white;
    border: 1px solid #e9ecef;
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .related-post-card:hover {
    border-color: #007bff;
    box-shadow: 0 8px 25px rgba(0, 123, 255, 0.15);
    transform: translateY(-2px);
  }

  .related-post-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1rem 0.5rem 1rem;
  }

  .impact-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.7rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: white;
  }

  .sentiment-indicator {
    font-size: 1.2rem;
    opacity: 0.8;
  }

  .post-title {
    font-size: 1rem;
    font-weight: 600;
    margin: 0 0 1rem 0;
    padding: 0 1rem;
    color: #333;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-metadata {
    padding: 0 1rem;
    margin-bottom: 1rem;
  }

  .metadata-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
    font-size: 0.8rem;
    color: #6c757d;
  }

  .sectors-row {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .sector-tag {
    background: #f8f9fa;
    color: #495057;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.7rem;
    border: 1px solid #e9ecef;
  }

  .more-sectors {
    background: #e9ecef;
    color: #6c757d;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.7rem;
    font-style: italic;
  }

  .tickers-row {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.8rem;
  }

  .tickers-label {
    color: #6c757d;
    font-weight: 500;
  }

  .tickers-list {
    display: flex;
    gap: 0.25rem;
    flex-wrap: wrap;
  }

  .ticker-badge {
    background: #007bff;
    color: white;
    padding: 0.125rem 0.375rem;
    border-radius: 8px;
    font-size: 0.7rem;
    font-weight: 600;
  }

  .more-tickers {
    background: #6c757d;
    color: white;
    padding: 0.125rem 0.375rem;
    border-radius: 8px;
    font-size: 0.7rem;
    font-style: italic;
  }

  .post-footer {
    padding: 0.75rem 1rem;
    border-top: 1px solid #f8f9fa;
    background: #f8f9fa;
  }

  .read-more {
    color: #007bff;
    font-size: 0.9rem;
    font-weight: 600;
    transition: color 0.2s;
  }

  .related-post-card:hover .read-more {
    color: #0056b3;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .related-posts-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .related-news-title {
      font-size: 1.25rem;
    }

    .post-title {
      font-size: 0.9rem;
    }

    .metadata-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }
  }

  /* Animaciones */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .related-post-card {
    animation: fadeInUp 0.5s ease forwards;
  }

  .related-post-card:nth-child(1) { animation-delay: 0.1s; }
  .related-post-card:nth-child(2) { animation-delay: 0.2s; }
  .related-post-card:nth-child(3) { animation-delay: 0.3s; }
  .related-post-card:nth-child(4) { animation-delay: 0.4s; }
  .related-post-card:nth-child(5) { animation-delay: 0.5s; }
</style>
