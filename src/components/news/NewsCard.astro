---
// Componente para mostrar una tarjeta de noticia individual

interface Props {
    title: string;
    url: string;
    isHighlight?: boolean;
    category?: string;
    pubDate?: Date;
    imageUrl?: string;
    excerpt?: string;
    priority?: boolean;
    newsId?: string;
    impact?: 'alto' | 'medio' | 'bajo';
    sectors?: string[];
    source?: string;
    sentiment?: 'positivo' | 'neutral' | 'negativo';
    relevanceScore?: number;
    tickers?: string[];
}

const { 
    title, 
    url, 
    isHighlight = false, 
    category, 
    pubDate, 
    imageUrl, 
    excerpt, 
    priority = false,
    newsId,
    impact = 'medio',
    sectors = [],
    source = 'Fuente desconocida',
    sentiment = 'neutral',
    relevanceScore = 5,
    tickers = []
} = Astro.props;

// Funci√≥n para obtener el icono seg√∫n el sector
function getSectorIcon(sector: string): string {
    const sectorLower = sector.toLowerCase();
    if (sectorLower.includes("tecnolog") || sectorLower.includes("tech")) return "üíª";
    if (sectorLower.includes("finanz") || sectorLower.includes("banc")) return "üí∞";
    if (sectorLower.includes("energ") || sectorLower.includes("petrol")) return "‚ö°";
    if (sectorLower.includes("salud") || sectorLower.includes("medic")) return "üè•";
    if (sectorLower.includes("consumo") || sectorLower.includes("retail")) return "üõí";
    if (sectorLower.includes("politic") || sectorLower.includes("gobierno")) return "üèõÔ∏è";
    if (sectorLower.includes("econom") || sectorLower.includes("macro")) return "üíπ";
    if (sectorLower.includes("automotriz") || sectorLower.includes("auto")) return "üöó";
    if (sectorLower.includes("comercio") || sectorLower.includes("trade")) return "üì¶";
    return "üìä";
}

// Funci√≥n para obtener el color seg√∫n el nivel de impacto
function getImpactColor(impact: string): string {
    switch (impact) {
        case 'alto': return '#ef4444'; // Rojo
        case 'medio': return '#f59e0b'; // Amarillo
        case 'bajo': return '#10b981'; // Verde
        default: return '#6b7280'; // Gris
    }
}

// Funci√≥n para obtener el color seg√∫n el sentimiento
function getSentimentColor(sentiment: string): string {
    switch (sentiment) {
        case 'positivo': return '#10b981'; // Verde
        case 'negativo': return '#ef4444'; // Rojo
        case 'neutral': return '#6b7280'; // Gris
        default: return '#6b7280';
    }
}

// Funci√≥n para obtener el icono seg√∫n el sentimiento
function getSentimentIcon(sentiment: string): string {
    switch (sentiment) {
        case 'positivo': return 'üìà';
        case 'negativo': return 'üìâ';
        case 'neutral': return '‚û°Ô∏è';
        default: return '‚û°Ô∏è';
    }
}

// Funci√≥n para obtener el color de borde seg√∫n el sector principal
function getSectorBorderColor(sectors: string[]): string {
    if (sectors.length === 0) return "var(--accent-blue)";
    
    const primarySector = sectors[0].toLowerCase();
    if (primarySector.includes("tecnolog")) return "#6366f1"; // Indigo
    if (primarySector.includes("finanz")) return "#10b981"; // Verde
    if (primarySector.includes("energ")) return "#f59e0b"; // Amarillo
    if (primarySector.includes("salud")) return "#ec4899"; // Rosa
    if (primarySector.includes("consumo")) return "#8b5cf6"; // P√∫rpura
    if (primarySector.includes("politic")) return "#3b82f6"; // Azul
    if (primarySector.includes("econom")) return "#f59e0b"; // Amarillo
    if (primarySector.includes("automotriz")) return "#ef4444"; // Rojo
    if (primarySector.includes("comercio")) return "#06b6d4"; // Cian
    
    return "var(--accent-blue)";
}

// Formatear tiempo relativo
function getRelativeTime(date?: Date): string {
    if (!date) return "";

    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMins = Math.floor(diffMs / (1000 * 60));

    if (diffMins < 60) {
        return `Hace ${diffMins} ${diffMins === 1 ? "minuto" : "minutos"}`;
    }

    const diffHours = Math.floor(diffMins / 60);
    if (diffHours < 24) {
        return `Hace ${diffHours} ${diffHours === 1 ? "hora" : "horas"}`;
    }

    const diffDays = Math.floor(diffHours / 24);
    return `Hace ${diffDays} ${diffDays === 1 ? "d√≠a" : "d√≠as"}`;
}

const timeAgo = getRelativeTime(pubDate);
const sectorBorderColor = getSectorBorderColor(sectors);
const impactColor = getImpactColor(impact);
const sentimentColor = getSentimentColor(sentiment);
const sentimentIcon = getSentimentIcon(sentiment);
---

<article
    class={`news-card ${isHighlight ? "highlight" : ""} impact-${impact}`}
    style={`--sector-color: ${sectorBorderColor}; --impact-color: ${impactColor}; --sentiment-color: ${sentimentColor};`}
    role="article"
    aria-labelledby={`news-title-${title.replace(/\s+/g, '-').toLowerCase()}`}
>
    <a href={url} class="card-link" aria-describedby={`news-excerpt-${title.replace(/\s+/g, '-').toLowerCase()}`}>
        {/* Header con badges de impacto y sentimiento */}
        <div class="card-header">
            <div class="impact-badges">
                <span class="impact-badge" style={`background-color: ${impactColor};`}>
                    {impact.toUpperCase()}
                </span>
                <span class="sentiment-badge" style={`background-color: ${sentimentColor};`}>
                    {sentimentIcon} {sentiment}
                </span>
            </div>
            <div class="relevance-score">
                <span class="score-label">Relevancia:</span>
                <div class="score-bar">
                    <div class="score-fill" style={`width: ${(relevanceScore / 10) * 100}%; background-color: ${impactColor};`}></div>
                </div>
                <span class="score-value">{relevanceScore}/10</span>
            </div>
        </div>

        {/* Sectores afectados */}
        {sectors.length > 0 && (
            <div class="sectors-container">
                {sectors.slice(0, 3).map(sector => (
                    <span class="sector-tag">
                        {getSectorIcon(sector)} {sector}
                    </span>
                ))}
                {sectors.length > 3 && (
                    <span class="sector-tag more-sectors">
                        +{sectors.length - 3} m√°s
                    </span>
                )}
            </div>
        )}

        {/* T√≠tulo de la noticia */}
        <h3 class="news-title" id={`news-title-${title.replace(/\s+/g, '-').toLowerCase()}`}>
            {title}
        </h3>

        {/* Tickers relacionados */}
        {tickers.length > 0 && (
            <div class="tickers-container">
                <span class="tickers-label">Acciones:</span>
                <div class="tickers-list">
                    {tickers.map(ticker => (
                        <span class="ticker-badge">{ticker}</span>
                    ))}
                </div>
            </div>
        )}

        {/* Footer con fuente y tiempo */}
        <div class="card-footer">
            <div class="source-info">
                <span class="source">{source}</span>
                {timeAgo && <span class="publish-time">{timeAgo}</span>}
            </div>
            <div class="read-more">
                Ver detalles ‚Üí
            </div>
        </div>
    </a>
</article>

<style>
    .news-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
        border: 2px solid var(--sector-color, #e5e7eb);
        padding: 1.5rem;
        margin-bottom: 1rem;
    }

    .news-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border-color: var(--sector-color, #d1d5db);
    }

    .news-card.impact-alto {
        border-left: 4px solid var(--impact-color);
    }

    .news-card.impact-medio {
        border-left: 3px solid var(--impact-color);
    }

    .news-card.impact-bajo {
        border-left: 2px solid var(--impact-color);
    }

    .card-link {
        display: block;
        padding: 0;
        color: inherit;
        text-decoration: none;
    }

    /* Header con badges */
    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        gap: 1rem;
    }

    .impact-badges {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .impact-badge, .sentiment-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: 700;
        color: white;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .relevance-score {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 120px;
    }

    .score-label {
        font-size: 0.7rem;
        color: #6b7280;
        font-weight: 500;
    }

    .score-bar {
        flex: 1;
        height: 4px;
        background: #e5e7eb;
        border-radius: 2px;
        overflow: hidden;
    }

    .score-fill {
        height: 100%;
        transition: width 0.3s ease;
    }

    .score-value {
        font-size: 0.7rem;
        font-weight: 600;
        color: #374151;
    }

    /* Sectores */
    .sectors-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .sector-tag {
        padding: 0.25rem 0.5rem;
        background: #f3f4f6;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
        color: #374151;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .sector-tag.more-sectors {
        background: #e5e7eb;
        color: #6b7280;
    }

    /* T√≠tulo */
    .news-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #111827;
        margin: 0 0 1rem;
        line-height: 1.5;
        letter-spacing: -0.025em;
        font-family: var(--font-body);
    }

    /* Tickers */
    .tickers-container {
        margin-bottom: 1rem;
    }

    .tickers-label {
        font-size: 0.75rem;
        color: #6b7280;
        font-weight: 500;
        margin-right: 0.5rem;
    }

    .tickers-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
        margin-top: 0.25rem;
    }

    .ticker-badge {
        padding: 0.2rem 0.4rem;
        background: #1e40af;
        color: white;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: 600;
        font-family: monospace;
    }

    /* Footer */
    .card-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #e5e7eb;
    }

    .source-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .source {
        font-size: 0.75rem;
        color: #6b7280;
        font-weight: 500;
    }

    .publish-time {
        font-size: 0.7rem;
        color: #9ca3af;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .read-more {
        font-size: 0.8rem;
        color: var(--sector-color, #1e40af);
        font-weight: 600;
        transition: transform 0.2s ease;
    }

    .news-card:hover .read-more {
        transform: translateX(2px);
    }

    /* Responsive */
    @media (max-width: 768px) {
        .card-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem;
        }

        .relevance-score {
            min-width: auto;
            width: 100%;
        }

        .news-title {
            font-size: 1.2rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .card-footer {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
    }

    @media (max-width: 480px) {
        .news-card {
            padding: 1rem;
        }

        .impact-badges {
            flex-direction: column;
            width: 100%;
        }

        .impact-badge, .sentiment-badge {
            text-align: center;
        }
    }
</style>
