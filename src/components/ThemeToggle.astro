---
// Componente para alternar entre modo claro y oscuro
---

<button 
    id="theme-toggle" 
    class="theme-toggle" 
    aria-label="Alternar modo oscuro"
    title="Alternar entre modo claro y oscuro"
>
    <span class="theme-icon sun-icon">‚òÄÔ∏è</span>
    <span class="theme-icon moon-icon">üåô</span>
</button>

<style>
    .theme-toggle {
        background: none;
        border: 2px solid var(--border);
        border-radius: 50%;
        width: 44px;
        height: 44px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .theme-toggle:hover {
        border-color: var(--accent);
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .theme-toggle:focus {
        outline: 2px solid var(--accent);
        outline-offset: 2px;
    }

    .theme-icon {
        font-size: 1.2rem;
        transition: all 0.3s ease;
        position: absolute;
    }

    .sun-icon {
        opacity: 1;
        transform: rotate(0deg);
    }

    .moon-icon {
        opacity: 0;
        transform: rotate(180deg);
    }

    /* Modo oscuro activo */
    body.dark-theme .sun-icon {
        opacity: 0;
        transform: rotate(-180deg);
    }

    body.dark-theme .moon-icon {
        opacity: 1;
        transform: rotate(0deg);
    }

    @media (max-width: 768px) {
        .theme-toggle {
            width: 40px;
            height: 40px;
        }
        
        .theme-icon {
            font-size: 1rem;
        }
    }
</style>

<script>
    // Funci√≥n para inicializar el tema
    function initTheme() {
        const themeToggle = document.getElementById('theme-toggle');
        const body = document.body;
        
        // Obtener tema guardado o usar preferencia del sistema
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const isDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
        
        // Aplicar tema inicial
        if (isDark) {
            body.classList.add('dark-theme');
        }
        
        // Event listener para el bot√≥n
        themeToggle?.addEventListener('click', () => {
            body.classList.toggle('dark-theme');
            const isDarkMode = body.classList.contains('dark-theme');
            localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
        });
        
        // Escuchar cambios en la preferencia del sistema
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
            if (!localStorage.getItem('theme')) {
                if (e.matches) {
                    body.classList.add('dark-theme');
                } else {
                    body.classList.remove('dark-theme');
                }
            }
        });
    }
    
    // Inicializar cuando el DOM est√© listo
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTheme);
    } else {
        initTheme();
    }
</script>