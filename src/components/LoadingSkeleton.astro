---
// Componente de skeleton loading para mejorar la experiencia de carga
interface Props {
    count?: number;
    type?: 'card' | 'list' | 'text';
}

const { count = 3, type = 'card' } = Astro.props;
---

{type === 'card' && (
    <div class="skeleton-container">
        {Array.from({ length: count }).map((_, index) => (
            <div class="skeleton-card" style={`animation-delay: ${index * 0.1}s`}>
                <div class="skeleton-image"></div>
                <div class="skeleton-content">
                    <div class="skeleton-category"></div>
                    <div class="skeleton-title"></div>
                    <div class="skeleton-title short"></div>
                    <div class="skeleton-excerpt"></div>
                    <div class="skeleton-excerpt"></div>
                    <div class="skeleton-footer">
                        <div class="skeleton-button"></div>
                        <div class="skeleton-time"></div>
                    </div>
                </div>
            </div>
        ))}
    </div>
)}

{type === 'list' && (
    <div class="skeleton-list">
        {Array.from({ length: count }).map((_, index) => (
            <div class="skeleton-list-item" style={`animation-delay: ${index * 0.1}s`}>
                <div class="skeleton-avatar"></div>
                <div class="skeleton-text">
                    <div class="skeleton-line"></div>
                    <div class="skeleton-line short"></div>
                </div>
            </div>
        ))}
    </div>
)}

{type === 'text' && (
    <div class="skeleton-text-container">
        {Array.from({ length: count }).map((_, index) => (
            <div class="skeleton-text-line" style={`animation-delay: ${index * 0.1}s`}></div>
        ))}
    </div>
)}

<style>
    .skeleton-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        padding: 1rem 0;
    }

    .skeleton-card {
        background: var(--background);
        border-radius: 1rem;
        padding: 1.5rem;
        border: 1px solid var(--border);
        animation: fadeInUp 0.6s ease-out;
    }

    .skeleton-image {
        width: 100%;
        height: 200px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    .skeleton-content {
        padding: 0;
    }

    .skeleton-category {
        width: 80px;
        height: 24px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 12px;
        margin-bottom: 0.75rem;
    }

    .skeleton-title {
        height: 20px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 4px;
        margin-bottom: 0.5rem;
    }

    .skeleton-title.short {
        width: 60%;
    }

    .skeleton-excerpt {
        height: 16px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 4px;
        margin-bottom: 0.5rem;
    }

    .skeleton-excerpt:last-of-type {
        width: 80%;
    }

    .skeleton-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
    }

    .skeleton-button {
        width: 100px;
        height: 32px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 16px;
    }

    .skeleton-time {
        width: 60px;
        height: 16px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 4px;
    }

    .skeleton-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .skeleton-list-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: var(--background);
        border-radius: 0.5rem;
        border: 1px solid var(--border);
        animation: fadeInUp 0.6s ease-out;
    }

    .skeleton-avatar {
        width: 48px;
        height: 48px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 50%;
        flex-shrink: 0;
    }

    .skeleton-text {
        flex: 1;
    }

    .skeleton-line {
        height: 16px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 4px;
        margin-bottom: 0.5rem;
    }

    .skeleton-line.short {
        width: 70%;
    }

    .skeleton-text-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .skeleton-text-line {
        height: 20px;
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite;
        border-radius: 4px;
    }

    .skeleton-text-line:nth-child(1) { width: 100%; }
    .skeleton-text-line:nth-child(2) { width: 95%; }
    .skeleton-text-line:nth-child(3) { width: 85%; }
    .skeleton-text-line:nth-child(4) { width: 90%; }
    .skeleton-text-line:nth-child(5) { width: 75%; }

    @media (max-width: 768px) {
        .skeleton-container {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .skeleton-card {
            padding: 1rem;
        }
        
        .skeleton-image {
            height: 150px;
        }
    }
</style>
