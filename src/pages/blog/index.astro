---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import NewsFilters from '../../components/news/NewsFilters.astro';
import QuickAnalysisSidebar from '../../components/finance/QuickAnalysisSidebar.astro';
import ProfessionalNewsList from '../../components/news/ProfessionalNewsList.astro';
import { NewsFilter, createDefaultFilters, urlParamsToFilters } from '../../utils/newsFilter';

// Obtener posts y crear instancia del filtro
const allPosts = await getCollection('blog');
const newsFilter = new NewsFilter(allPosts);

// Obtener filtros de la URL
const url = new URL(Astro.request.url);
const urlParams = new URLSearchParams(url.search);
const filters = urlParamsToFilters(urlParams);

// Aplicar filtros
const filteredResults = newsFilter.filter(filters);
const filteredPosts = filteredResults.map(result => result.post);

// Agrupar posts por fecha
const groupedPosts = filteredPosts.reduce((acc, post) => {
	const dateKey = post.data.pubDate.toLocaleDateString('es-ES', {
		year: 'numeric',
		month: 'long',
		day: 'numeric'
	});
	
	if (!acc[dateKey]) {
		acc[dateKey] = [];
	}
	acc[dateKey].push(post);
	return acc;
}, {} as Record<string, typeof filteredPosts>);

// Obtener estad칤sticas de filtros
const filterStats = newsFilter.getFilterStats(filters);
const availableFilters = newsFilter.getAvailableFilters();
---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title={`${SITE_TITLE} - Blog de Noticias Financieras`} description="An치lisis profesional de noticias financieras con filtros avanzados y metadatos de impacto" />
		<style>
			.blog-header {
				background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
				color: white;
				padding: 3rem 0;
				text-align: center;
			}

			.blog-header h1 {
				font-size: 3rem;
				font-weight: 800;
				margin: 0 0 1rem 0;
				background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}

			.blog-header p {
				font-size: 1.2rem;
				opacity: 0.9;
				max-width: 600px;
				margin: 0 auto;
			}

			.filter-stats {
				background: #f8f9fa;
				padding: 1rem 0;
				border-bottom: 1px solid #e9ecef;
			}

			.stats-container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 0 1rem;
				display: flex;
				justify-content: space-between;
				align-items: center;
				flex-wrap: wrap;
				gap: 1rem;
			}

			.stats-item {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				font-size: 0.9rem;
				color: #6c757d;
			}

			.stats-number {
				font-weight: 700;
				color: #495057;
				font-size: 1.1rem;
			}

			.main-content {
				background: #f8f9fa;
				min-height: calc(100vh - 200px);
			}

			.wrapper {
				max-width: 1400px;
				margin: 0 auto;
				padding: 2rem 1rem;
			}

			.dashboard-layout {
				display: grid;
				grid-template-columns: 300px 1fr 350px;
				gap: 2rem;
				align-items: start;
			}

			.filters-column {
				background: white;
				border-radius: 12px;
				padding: 1.5rem;
				box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
				position: sticky;
				top: 2rem;
			}

			.news-column {
				background: white;
				border-radius: 12px;
				padding: 1.5rem;
				box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
			}

			.analysis-column {
				background: white;
				border-radius: 12px;
				padding: 1.5rem;
				box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
				position: sticky;
				top: 2rem;
			}

			.no-results {
				text-align: center;
				padding: 3rem 1rem;
				color: #6c757d;
			}

			.no-results h3 {
				font-size: 1.5rem;
				margin-bottom: 1rem;
				color: #495057;
			}

			.no-results p {
				font-size: 1rem;
				margin-bottom: 1.5rem;
			}

			.clear-filters-btn {
				background: #007bff;
				color: white;
				border: none;
				padding: 0.75rem 1.5rem;
				border-radius: 8px;
				font-size: 0.9rem;
				cursor: pointer;
				transition: background-color 0.2s;
			}

			.clear-filters-btn:hover {
				background: #0056b3;
			}

			@media (max-width: 1200px) {
				.dashboard-layout {
					grid-template-columns: 1fr;
					gap: 1.5rem;
				}

				.filters-column,
				.analysis-column {
					position: static;
				}
			}

			@media (max-width: 768px) {
				.blog-header h1 {
					font-size: 2rem;
				}

				.blog-header p {
					font-size: 1rem;
				}

				.stats-container {
					flex-direction: column;
					align-items: flex-start;
				}

				.wrapper {
					padding: 1rem;
				}

				.filters-column,
				.news-column,
				.analysis-column {
					padding: 1rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		
		<div class="blog-header">
			<div class="wrapper">
				<h1>游늳 Blog de Noticias Financieras</h1>
				<p>An치lisis profesional con filtros avanzados, metadatos de impacto y herramientas para inversores</p>
			</div>
		</div>

		<div class="filter-stats">
			<div class="stats-container">
				<div class="stats-item">
					<span>游늵 Total de noticias:</span>
					<span class="stats-number">{filterStats.total}</span>
				</div>
				<div class="stats-item">
					<span>游댌 Resultados filtrados:</span>
					<span class="stats-number">{filterStats.filtered}</span>
				</div>
				<div class="stats-item">
					<span>游늰 칔ltima actualizaci칩n:</span>
					<span class="stats-number">{new Date().toLocaleDateString('es-ES')}</span>
				</div>
			</div>
		</div>

		<main class="main-content">
			<div class="wrapper">
				<div class="dashboard-layout">
					<!-- Columna 1: Filtros -->
					<aside class="filters-column">
						<NewsFilters />
					</aside>

					<!-- Columna 2: Noticias principales -->
					<section class="news-column">
						{filteredPosts.length > 0 ? (
							<ProfessionalNewsList groupedPosts={groupedPosts} />
						) : (
							<div class="no-results">
								<h3>游댌 No se encontraron resultados</h3>
								<p>Intenta ajustar los filtros o limpiar la b칰squeda para ver m치s noticias.</p>
								<button class="clear-filters-btn" onclick="clearAllFilters()">
									Limpiar Filtros
								</button>
							</div>
						)}
					</section>

					<!-- Columna 3: An치lisis r치pido -->
					<aside class="analysis-column">
						<QuickAnalysisSidebar />
					</aside>
				</div>
			</div>
		</main>

		<Footer />

		<script>
			function clearAllFilters() {
				window.location.href = '/blog/';
			}

			// Sincronizar filtros con URL
			function updateUrlWithFilters() {
				const form = document.querySelector('.news-filters') as HTMLFormElement;
				if (!form) return;

				const params = new URLSearchParams();

				// Recopilar todos los filtros activos
				const checkboxes = form.querySelectorAll('input[type="checkbox"]:checked') as NodeListOf<HTMLInputElement>;
				const selects = form.querySelectorAll('select') as NodeListOf<HTMLSelectElement>;
				const inputs = form.querySelectorAll('input[type="text"], input[type="date"]') as NodeListOf<HTMLInputElement>;

				// Agrupar checkboxes por tipo
				const filterGroups: Record<string, string[]> = {};
				checkboxes.forEach(checkbox => {
					const group = checkbox.name;
					if (!filterGroups[group]) filterGroups[group] = [];
					filterGroups[group].push(checkbox.value);
				});

				// A침adir grupos de filtros a params
				Object.entries(filterGroups).forEach(([group, values]) => {
					if (values.length > 0) {
						params.set(group, values.join(','));
					}
				});

				// A침adir selects e inputs
				selects.forEach(select => {
					if (select.value && select.value !== '') {
						params.set(select.name, select.value);
					}
				});

				inputs.forEach(input => {
					if (input.value && input.value !== '') {
						params.set(input.name, input.value);
					}
				});

				// Actualizar URL
				const newUrl = new URL(window.location.href);
				newUrl.search = params.toString();
				window.history.pushState({}, '', newUrl.toString());
			}

			// A침adir event listeners
			document.addEventListener('DOMContentLoaded', function() {
				const form = document.querySelector('.news-filters') as HTMLFormElement;
				if (form) {
					form.addEventListener('change', updateUrlWithFilters);
					form.addEventListener('input', updateUrlWithFilters);
				}
			});
		</script>
	</body>
</html>
